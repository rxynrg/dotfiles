[init]
	defaultBranch = main
[user]
	name = {{ git.name }}
	email = {{ git.email }}
{% if gpg.enabled %}
	signingKey = {{ gpg.key }}
{% endif %}
[alias]
	a = add
	st = status
	co = "!echo 'Stop using git checkout! Use git switch or git branch' && false"
	checkout = "!echo 'Stop using git checkout! Use git switch or git branch' && false"
	cmt = commit -S -m
	sw = switch
	noff = merge --no-ff
	l = log --graph --date=short --branches --pretty=format:'%C(yellow)%h%C(reset) %ad | %C(75)%s%C(reset) %C(yellow)%d%C(reset) [%an]'
	precommit = diff --cached --diff-algorithm=minimal -w
	plr = pull --rebase
	amend = commit --amend
	wip = !git add -A && git commit -m "WIP" --no-verify
	br = branch
	brs = branch -a
	rn = branch -m
	stashes = stash list
	unstage = restore --staged .
	diffiles = diff master HEAD --compact-summary
	undo = reset --soft HEAD^

	forget = !git stash && git stash drop
	nevermind = !git reset --hard HEAD && git clean -d -f
	delete-tag="!f() { git push --delete ${2-origin} ${1}; git tag -d ${1}; }; f"
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	please = push --force-with-lease

	# publish current branch
	publish = "!f() { git push -u ${1:-origin} $(git rev-parse --abbrev-ref HEAD); }; f"

	# Nukes a branch locally and on the origin remote.
	nuke = "!f() { git branch -D $1 && git push origin :$1; }; f"

	# Remove local branches that have been removed upstream
	cleanup = "!git fetch --all -p && git branch -vv | grep \": gone]\" | awk '{ print $1 }' | xargs -n 1 git branch -D"

	clear = "git branch | grep -v 'main' | xargs git branch -D"

	# http://gggritso.com/human-git-aliases
	unstage = reset -q HEAD --
	discard = checkout --
	uncommit = reset --mixed HEAD~

	# Copy current branch name to clipboard (macOS only)
	cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"
	currbr = "!git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/\\1/'"

	# Set up your branch to track a remote branch. Assumes you mean `origin/$branch-name`.
	track = "!f() { branch=$(git rev-parse --abbrev-ref HEAD); git branch $branch --set-upstream-to origin/$branch }; f"
[color]
    diff = auto
    status = auto
    branch = auto
    interactive = true
    ui = true
    pager = true
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	editor = vim
	pager = less
	autocrlf = input
	hooksPath = /dev/null
[diff]
    algorithm = histogram
    colorMoved = true
    indentHeuristic = true
[pull]
	rebase = true
[push]
	default = upstream
	autoSetupRemote = true
	followtags = true
[rebase]
	autosquash = true
[pager]
	status = true
	diff = true
	commit = false
	log = true
	cl = false
	blame = false
	merge = false
	rebase = false
	help = false
	show = true
	reflog = false
	grep = false
[advice]
	statusHints = false
{% if gpg.enabled %}
[commit]
	gpgSign = true
[gpg]
	program = gpg
	format = openpgp
{% endif %}
