[init]
  defaultBranch = main
{% if ansible_system == "Darwin" %}
[credential]
  helper = osxkeychain
{% else %}
{% endif %}
[github]
  user = sildvauresberg
[user]
	name = {{ git.name }}
	email = {{ git.email }}
[alias]
	a = add
	st = status
	co = checkout
	cob = checkout -b
	cp = cherry-pick
	cmt = commit
	noff = merge --no-ff
	log-pretty = log --graph --date=short --branches --pretty=format:'%C(yellow)%h%C(reset) %ad | %C(75)%s%C(reset) %C(yellow)%d%C(reset) [%an]'
	l = log --graph --decorate --oneline --abbrev-commit --all
	precommit = diff --cached --diff-algorithm=minimal -w
	plr = pull --rebase
	amend = commit --amend
	wip = !git add -A && git commit -m "WIP" --no-verify
	br = branch
	brs = branch -a
	rn = branch -m
	stashes = stash list
	nevermind = !git reset --hard HEAD && git clean -d -f
	delete-tag="!f() { git push --delete ${2-origin} ${1}; git tag -d ${1}; }; f"
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	please = push --force-with-lease

	# publish current branch
	publish = "!f() { git push -u ${1:-origin} $(git rev-parse --abbrev-ref HEAD); }; f"

	# Nukes a branch locally and on the origin remote.
	nuke = "!f() { git branch -D $1 && git push origin :$1; }; f"

	# Remove local branches that have been removed upstream
	cleanup = "!git fetch --all -p && git branch -vv | grep \": gone]\" | awk '{ print $1 }' | xargs -n 1 git branch -D"

  clear = "git branch | grep -v 'main' | xargs git branch -D"

	# http://gggritso.com/human-git-aliases
	unstage = reset -q HEAD --
	discard = checkout --
	uncommit = reset --mixed HEAD~

	# Copy current branch name to clipboard (macOS only)
	cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"

	# Set up your branch to track a remote branch. Assumes you mean `origin/$branch-name`.
	track = "!f() { branch=$(git rev-parse --abbrev-ref HEAD); git branch $branch --set-upstream-to origin/$branch }; f"
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = true
  pager = true
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	editor = vim
  pager = less
[merge]
	tool = vimdiff
	conflictstyle = merge
[mergetool]
	keepBackup = false
[difftool]
	prompt = false
[branch]
  autoSetupRebase = always
[pull]
	rebase = true
[push]
  default = upstream
  autoSetupRemote = true
[rebase]
  autosquash = true
[pager]
  status = true
[help]
  autocorrect = 1
[advice]
  statusHints = false
